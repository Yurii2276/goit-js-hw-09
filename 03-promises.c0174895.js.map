{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,UAAWC,SAASC,cAAe,QACnCC,WAAYF,SAASC,cAAe,uBACpCE,UAAWH,SAASC,cAAe,sBACnCG,YAAaJ,SAASC,cAAe,yBA0CvC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAaC,aAAY,WACPC,KAAKC,SAAW,IAEpCC,cAAcJ,GACdF,EAAQ,CAAEH,WAAUC,YAEpBQ,cAAcJ,GACdD,EAAO,CAAEJ,WAAUC,U,GAEpBA,E,IAlDPS,iBAAkB,UAElB,WACEC,MAAMC,iBAEN,IAAIC,EAAQC,OAAOtB,EAAKI,WAAWmB,OAC/BC,EAAOF,OAAOtB,EAAKK,UAAUkB,OAC7BE,EAASH,OAAOtB,EAAKM,YAAYiB,OACjCG,EAAW,GAEXD,GAAU,GAAKJ,EAAQ,GAAKG,EAAO,IACrCG,EAAA7B,GAAS8B,OAAOC,QAAS,sCAG7B,IAAK,IAAIC,EAAI,EAAGA,GAAKL,EAAQK,GAAK,EAE9BvB,EADAmB,EAAWI,EACaT,GACrBU,MAAK,SAAAC,G,IAAGxB,EAAQwB,EAARxB,SAAUC,EAAKuB,EAALvB,MACjBkB,EAAA7B,GAAS8B,OAAOK,QACd,uBAAwCC,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,M,IAGjD0B,OAAM,SAAAH,G,IAAGxB,EAAQwB,EAARxB,SAAUC,EAAKuB,EAALvB,MAClBkB,EAAA7B,GAAS8B,OAAOC,QACd,sBAAuCK,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,M,IAGnDY,GAASG,EAEXxB,EAAKC,UAAUmC,QAIfC,QAAQC,IAAIjB,EAAOG,EAAMC,EAAQC,GACjCW,QAAQC,IAAK,oB","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  formField: document.querySelector(`form`),\n  delayField: document.querySelector(`input[name=\"delay\"]`),\n  stepField: document.querySelector(`input[name=\"step\"]`),\n  amountField: document.querySelector(`input[name=\"amount\"]`),\n};\n\naddEventListener(`submit`, onHandleForm);\n\nfunction onHandleForm() {\n  event.preventDefault();\n  \n  let delay = Number(refs.delayField.value);\n  let step = Number(refs.stepField.value);\n  let amount = Number(refs.amountField.value);\n  let position = 0;\n \n  if (amount <= 0 || delay < 0 || step < 0) {\n    Notiflix.Notify.failure(` Please input correct values (>=0)`);\n  }\n\nfor (let i = 1; i <= amount; i += 1) {\n    position = i;\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    delay += step;\n  }\n  refs.formField.reset();\n\n\n\n  console.log(delay, step, amount, position);\n  console.log(`функціям генерайт`);\n\n};\n\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const intervalId = setInterval(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        clearInterval(intervalId); \n        resolve({ position, delay });\n      } else {\n        clearInterval(intervalId); \n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\n\n  \n  \n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$refs","formField","document","querySelector","delayField","stepField","amountField","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","intervalId","setInterval","Math","random","clearInterval","addEventListener","event","preventDefault","delay1","Number","value","step","amount","position1","$parcel$interopDefault","Notify","failure","i","then","param","success","concat","catch","reset","console","log"],"version":3,"file":"03-promises.c0174895.js.map"}